{"ast":null,"code":"var _jsxFileName = \"/Users/jackgoler/Downloads/quadstr/client/src/components/profile/Chat.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getChatById } from '../../actions/profile';\n\nconst Chat = ({\n  getChatById,\n  profile: {\n    chat\n  },\n  //chats: { chat, loading }, \n  match\n}) => {\n  useEffect(() => {\n    getChatById(match.params.id);\n  }, [getChatById]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, chat));\n};\n\nChat.propTypes = {\n  getChatById: PropTypes.func.isRequired,\n  chat: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  chat: state.chat,\n  profile: PropTypes.object.isRequired\n});\n\nexport default connect(mapStateToProps, {\n  getChatById\n})(Chat);\n/*\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nconst Chat = props => {\n  const chatId = useParams();\n  return <Fragment>\n    {chatId}\n  </Fragment>\n};\n\nChat.propTypes = {};\n\nexport default Chat;\n\n\n/*\nimport React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentChat } from '../../actions/profile';\nimport Posts from './Posts';\n\nconst Chat = ({ chat }) => {\n  return loading && chat === null ? <div>Loading...</div> : <Fragment>\n  <h1 className=\"large text-primary\">\n    {chat.title}\n  </h1>\n  <Link to=\"#!\">Chat details</Link>\n  {chat !== null ? (\n    <Fragment>\n      <Posts post={chat.posts} />\n    </Fragment>) :\n    (\n      <Fragment>\n        <Link to=\"/create-post\">Create New Post</Link>\n        <div className=\"profile bg-light\">\n          <div>\n            <h2>\n              Posts:\n            </h2>\n            <p>There are no posts</p>\n          </div>\n        </div>\n      </Fragment>\n    )}\n};\n\n\nChat.propTypes = {\n  getCurrentChat: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  chat: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  chat: state.chat\n});\n\nexport default connect(mapStateToProps, { getCurrentChat })(Chat);\n\n\n  */\n\n/*\nimport React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nconst Chat = ({ chat }) => {\nconst posts = chat.map(post => (\n  <div key={post._id} class=\"profile bg-light\">\n    <div>\n      <h2><Link to=\"post.html\">{post.title}</Link></h2>\n    </div>\n    <div>\n      {post.text}\n    </div>\n  </div>\n));\nreturn (\n  <Fragment>\n    <h1 className=\"large text-primary\">\n      {chat.title}\n    </h1>\n    <Link to=\"/chat-details\">Chat Details</Link>\n    <p className=\"lead\">\n      Posts\n    </p>\n    <Link to=\"create_post.html\">Create new post</Link>\n    <div class=\"posts\">\n      {posts}\n    </div>\n  </Fragment>\n)\n};\n\nChat.propTypes = {\nchat: PropTypes.object.isRequired\n};\n\nexport default Chat;\n*/","map":{"version":3,"sources":["/Users/jackgoler/Downloads/quadstr/client/src/components/profile/Chat.js"],"names":["React","Fragment","useEffect","PropTypes","connect","getChatById","Chat","profile","chat","match","params","id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,uBAA5B;;AAEA,MAAMC,IAAI,GAAG,CAAC;AACZD,EAAAA,WADY;AAEZE,EAAAA,OAAO,EAAE;AAAEC,IAAAA;AAAF,GAFG;AAGZ;AACAC,EAAAA;AAJY,CAAD,KAIC;AACZP,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,WAAW,CAACI,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAX;AACD,GAFQ,EAEN,CAACN,WAAD,CAFM,CAAT;AAGA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,IAAL,CADF,CADF;AAKD,CAbD;;AAeAF,IAAI,CAACM,SAAL,GAAiB;AACfP,EAAAA,WAAW,EAAEF,SAAS,CAACU,IAAV,CAAeC,UADb;AAEfN,EAAAA,IAAI,EAAEL,SAAS,CAACY,MAAV,CAAiBD;AAFR,CAAjB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCT,EAAAA,IAAI,EAAES,KAAK,CAACT,IADoB;AAEhCD,EAAAA,OAAO,EAAEJ,SAAS,CAACY,MAAV,CAAiBD;AAFM,CAAL,CAA7B;;AAKA,eAAeV,OAAO,CAACY,eAAD,EAAkB;AAAEX,EAAAA;AAAF,CAAlB,CAAP,CAA0CC,IAA1C,CAAf;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoEA","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getChatById } from '../../actions/profile';\n\nconst Chat = ({\n  getChatById,\n  profile: { chat },\n  //chats: { chat, loading }, \n  match }) => {\n  useEffect(() => {\n    getChatById(match.params.id);\n  }, [getChatById]);\n  return (\n    <Fragment>\n      <h1>{chat}</h1>\n    </Fragment>\n  )\n}\n\nChat.propTypes = {\n  getChatById: PropTypes.func.isRequired,\n  chat: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  chat: state.chat,\n  profile: PropTypes.object.isRequired\n})\n\nexport default connect(mapStateToProps, { getChatById })(Chat);\n\n\n/*\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nconst Chat = props => {\n  const chatId = useParams();\n  return <Fragment>\n    {chatId}\n  </Fragment>\n};\n\nChat.propTypes = {};\n\nexport default Chat;\n\n\n/*\nimport React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentChat } from '../../actions/profile';\nimport Posts from './Posts';\n\nconst Chat = ({ chat }) => {\n  return loading && chat === null ? <div>Loading...</div> : <Fragment>\n  <h1 className=\"large text-primary\">\n    {chat.title}\n  </h1>\n  <Link to=\"#!\">Chat details</Link>\n  {chat !== null ? (\n    <Fragment>\n      <Posts post={chat.posts} />\n    </Fragment>) :\n    (\n      <Fragment>\n        <Link to=\"/create-post\">Create New Post</Link>\n        <div className=\"profile bg-light\">\n          <div>\n            <h2>\n              Posts:\n            </h2>\n            <p>There are no posts</p>\n          </div>\n        </div>\n      </Fragment>\n    )}\n};\n\n\nChat.propTypes = {\n  getCurrentChat: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  chat: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  chat: state.chat\n});\n\nexport default connect(mapStateToProps, { getCurrentChat })(Chat);\n\n\n  */\n\n/*\nimport React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nconst Chat = ({ chat }) => {\nconst posts = chat.map(post => (\n  <div key={post._id} class=\"profile bg-light\">\n    <div>\n      <h2><Link to=\"post.html\">{post.title}</Link></h2>\n    </div>\n    <div>\n      {post.text}\n    </div>\n  </div>\n));\nreturn (\n  <Fragment>\n    <h1 className=\"large text-primary\">\n      {chat.title}\n    </h1>\n    <Link to=\"/chat-details\">Chat Details</Link>\n    <p className=\"lead\">\n      Posts\n    </p>\n    <Link to=\"create_post.html\">Create new post</Link>\n    <div class=\"posts\">\n      {posts}\n    </div>\n  </Fragment>\n)\n};\n\nChat.propTypes = {\nchat: PropTypes.object.isRequired\n};\n\nexport default Chat;\n*/\n"]},"metadata":{},"sourceType":"module"}