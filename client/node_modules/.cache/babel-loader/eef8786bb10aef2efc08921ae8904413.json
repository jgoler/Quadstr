{"ast":null,"code":"var _jsxFileName = \"/Users/jackgoler/Downloads/quadstr/client/src/components/profile/Chats.js\";\n\n/*\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getCurrentChat } from '../../actions/profile';\n\n\nconst Chats = ({\n  getCurrentChat,\n  auth: { user },\n  chat: { chat, loading } }) => {\n  const chats = chat.map(ch => (\n    <li className=\"text-primary\" key={ch._id}>\n      <Link to=\"/chat\">{ch}</Link>\n    </li>\n  ));\n  return (\n    <Fragment>\n      <Link to=\"/create-chat\">Create New Chat</Link>\n      <br />\n      <Link to=\"/join-chat\">Join a Chat</Link>\n      <div className=\"profiles\">\n        <div className=\"profile bg-light\">\n          <div>\n            <h2>Your chats:</h2>\n          </div>\n          <ul>\n            {chats}\n          </ul>\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nChats.propTypes = {\n  getCurrentChat: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  chat: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, { getCurrentChat })(Chats);\n\n*/\n\n/*\nimport React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Chat from '/Chats';\nimport { connect } from 'react-redux';\n// use useState to see if it was clicked, then conditionally render the chats, or the specific chat using ternary operator. Also make it so that the Chat component below is not a chat, and p instead.\n\n\nconst Chats = ({ getCurrentChat, auth, chat }) => {\n  const [clicked, setClicked] = useState({\n    wasClicked: false\n  }, []);\n\n  useEffect((e) => {\n    getCurrentChat(e.target.id);\n  }, [])\n\n\n\n  const chats = chat.map(ch => (\n    <li className=\"text-primary\" key={ch._id}>\n      <Chat id={ch._id} onClick={useEffect} chat={ch}>{ch}</Chat>\n    </li>\n  ));\n  return wasClicked ? <Chat chat={e.target.id} /> :\n    <Fragment>\n      <Link to=\"/create-chat\">Create New Chat</Link>\n      <br />\n      <Link to=\"/join-chat\">Join a Chat</Link>\n      <div className=\"profiles\">\n        <div className=\"profile bg-light\">\n          <div>\n            <h2>Your chats:</h2>\n          </div>\n          <ul>\n            {chats}\n          </ul>\n        </div>\n      </div>\n    </Fragment>\n};\n\nChats.propTypes = {\n  chat: PropTypes.array.isRequired,\n  getCurrentChat: PropTypes.func.isRequired,\n  chat: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  chat: state.chat\n});\n\nexport default connnect(mapStateToProps, { getCurrentChat })(Chats);\n*/\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Chats = ({\n  chats\n}) => {\n  const chat = chats.map(ch => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"text-primary\",\n    key: ch._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, ch)));\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/create-chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, \"Create New Chat\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/join-chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, \"Join a Chat\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profiles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile bg-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, \"Your chats:\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, chats))));\n};\n\nChats.propTypes = {\n  chat: PropTypes.array.isRequired\n};\nexport default Chats;\n/*\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst Chats = ({ chats }) => {\n  return (\n    <Fragment>\n\n    </Fragment>\n  )\n}\n\nChats.propTypes = {\n\n}\n\nexport default Chats;\n*/","map":{"version":3,"sources":["/Users/jackgoler/Downloads/quadstr/client/src/components/profile/Chats.js"],"names":["React","Fragment","PropTypes","Link","Chats","chats","chat","map","ch","_id","propTypes","array","isRequired"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAIA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC3B,QAAMC,IAAI,GAAGD,KAAK,CAACE,GAAN,CAAUC,EAAE,iBACvB;AAAI,IAAA,SAAS,EAAC,cAAd;AAA6B,IAAA,GAAG,EAAEA,EAAE,CAACC,GAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBD,EAAlB,CADF,CADW,CAAb;AAKA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,eAIE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KADH,CAJF,CADF,CAJF,CADF;AAiBD,CAvBD;;AAyBAD,KAAK,CAACM,SAAN,GAAkB;AAChBJ,EAAAA,IAAI,EAAEJ,SAAS,CAACS,KAAV,CAAgBC;AADN,CAAlB;AAMA,eAAeR,KAAf;AAGA","sourcesContent":["/*\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getCurrentChat } from '../../actions/profile';\n\n\nconst Chats = ({\n  getCurrentChat,\n  auth: { user },\n  chat: { chat, loading } }) => {\n  const chats = chat.map(ch => (\n    <li className=\"text-primary\" key={ch._id}>\n      <Link to=\"/chat\">{ch}</Link>\n    </li>\n  ));\n  return (\n    <Fragment>\n      <Link to=\"/create-chat\">Create New Chat</Link>\n      <br />\n      <Link to=\"/join-chat\">Join a Chat</Link>\n      <div className=\"profiles\">\n        <div className=\"profile bg-light\">\n          <div>\n            <h2>Your chats:</h2>\n          </div>\n          <ul>\n            {chats}\n          </ul>\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nChats.propTypes = {\n  getCurrentChat: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  chat: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, { getCurrentChat })(Chats);\n\n*/\n/*\nimport React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Chat from '/Chats';\nimport { connect } from 'react-redux';\n// use useState to see if it was clicked, then conditionally render the chats, or the specific chat using ternary operator. Also make it so that the Chat component below is not a chat, and p instead.\n\n\nconst Chats = ({ getCurrentChat, auth, chat }) => {\n  const [clicked, setClicked] = useState({\n    wasClicked: false\n  }, []);\n\n  useEffect((e) => {\n    getCurrentChat(e.target.id);\n  }, [])\n\n\n\n  const chats = chat.map(ch => (\n    <li className=\"text-primary\" key={ch._id}>\n      <Chat id={ch._id} onClick={useEffect} chat={ch}>{ch}</Chat>\n    </li>\n  ));\n  return wasClicked ? <Chat chat={e.target.id} /> :\n    <Fragment>\n      <Link to=\"/create-chat\">Create New Chat</Link>\n      <br />\n      <Link to=\"/join-chat\">Join a Chat</Link>\n      <div className=\"profiles\">\n        <div className=\"profile bg-light\">\n          <div>\n            <h2>Your chats:</h2>\n          </div>\n          <ul>\n            {chats}\n          </ul>\n        </div>\n      </div>\n    </Fragment>\n};\n\nChats.propTypes = {\n  chat: PropTypes.array.isRequired,\n  getCurrentChat: PropTypes.func.isRequired,\n  chat: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  chat: state.chat\n});\n\nexport default connnect(mapStateToProps, { getCurrentChat })(Chats);\n*/\n\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n\n\nconst Chats = ({ chats }) => {\n  const chat = chats.map(ch => (\n    <li className=\"text-primary\" key={ch._id}>\n      <Link to=\"/chat\">{ch}</Link>\n    </li>\n  ));\n  return (\n    <Fragment>\n      <Link to=\"/create-chat\">Create New Chat</Link>\n      <br />\n      <Link to=\"/join-chat\">Join a Chat</Link>\n      <div className=\"profiles\">\n        <div className=\"profile bg-light\">\n          <div>\n            <h2>Your chats:</h2>\n          </div>\n          <ul>\n            {chats}\n          </ul>\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nChats.propTypes = {\n  chat: PropTypes.array.isRequired\n}\n\n\n\nexport default Chats;\n\n\n/*\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst Chats = ({ chats }) => {\n  return (\n    <Fragment>\n\n    </Fragment>\n  )\n}\n\nChats.propTypes = {\n\n}\n\nexport default Chats;\n*/"]},"metadata":{},"sourceType":"module"}