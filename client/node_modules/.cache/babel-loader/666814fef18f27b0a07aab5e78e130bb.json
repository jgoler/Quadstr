{"ast":null,"code":"var _jsxFileName = \"/Users/jackgoler/Downloads/quadstr/client/src/components/profile/Chat.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentChat } from '../../actions/profile';\nimport Posts from './Posts';\n\nconst Chat = ({\n  getCurrentChat,\n  auth: {\n    user\n  },\n  chat: {\n    chat,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getCurrentChat();\n  }, []);\n  return loading && chat === null ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 37\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, chat.title), /*#__PURE__*/React.createElement(Link, {\n    to: \"#!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, \"Chat details\"), chat !== null ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Posts, {\n    post: chat.posts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  })) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/create-post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, \"Create New Post\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile bg-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }, \"Posts:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, \"There are no posts\")))));\n};\n\nChat.propTypes = {\n  getCurrentChat: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  chat: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  chat: state.chat\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentChat\n})(Chat);\n/*\nimport React, {Fragment} from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\nconst Chat = ({chat}) => {\nconst posts = chat.posts.map(post => {\n  <Fragment>\n    <div key={post._id} class=\"posts\">\n      <div class=\"profile bg-light\">\n        <div>\n          <h2><Link to=\"/post\">{post.title}</Link></h2>\n        </div>\n        <div>\n          {post.text}\n        </div>\n      </div>\n    </div>\n  </Fragment>\n });\nreturn (\n<Fragment>\n  <h1 className=\"large text-primary\">\n    {chat.title}\n  </h1>\n  <Link to=\"/chat-details\">Chat Details</Link>\n  <p className=\"lead\">\n    Posts\n  </p>\n  <Link to=\"/create-post\">Create new post</Link>\n  {posts}\n</Fragment>\n)\n}\nChat.propTypes = {\n  chat: PropTypes.array.isRequired\n};\n export default Chat;\n*/","map":{"version":3,"sources":["/Users/jackgoler/Downloads/quadstr/client/src/components/profile/Chat.js"],"names":["React","Fragment","useEffect","Link","PropTypes","connect","getCurrentChat","Posts","Chat","auth","user","chat","loading","title","posts","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AACZF,EAAAA,cADY;AAEZG,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF,GAFM;AAGZC,EAAAA,IAAI,EAAE;AAAEA,IAAAA,IAAF;AAAQC,IAAAA;AAAR;AAHM,CAAD,KAGmB;AAC9BV,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;AAGA,SAAOM,OAAO,IAAID,IAAI,KAAK,IAApB,gBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA3B,gBAAmD,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACxD;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,CAACE,KADR,CADwD,eAIxD,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJwD,EAKvDF,IAAI,KAAK,IAAT,gBACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEA,IAAI,CAACG,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,gBAKG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF,CADF,CAFF,CAVoD,CAA1D;AAuBD,CA9BD;;AAgCAN,IAAI,CAACO,SAAL,GAAiB;AACfT,EAAAA,cAAc,EAAEF,SAAS,CAACY,IAAV,CAAeC,UADhB;AAEfR,EAAAA,IAAI,EAAEL,SAAS,CAACc,MAAV,CAAiBD,UAFR;AAGfN,EAAAA,IAAI,EAAEP,SAAS,CAACc,MAAV,CAAiBD;AAHR,CAAjB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCX,EAAAA,IAAI,EAAEW,KAAK,CAACX,IADoB;AAEhCE,EAAAA,IAAI,EAAES,KAAK,CAACT;AAFoB,CAAL,CAA7B;;AAKA,eAAeN,OAAO,CAACc,eAAD,EAAkB;AAAEb,EAAAA;AAAF,CAAlB,CAAP,CAA6CE,IAA7C,CAAf;AAGI","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentChat } from '../../actions/profile';\nimport Posts from './Posts';\n\nconst Chat = ({\n  getCurrentChat,\n  auth: { user },\n  chat: { chat, loading } }) => {\n  useEffect(() => {\n    getCurrentChat();\n  }, []);\n  return loading && chat === null ? <div>Loading...</div> : <Fragment>\n    <h1 className=\"large text-primary\">\n      {chat.title}\n    </h1>\n    <Link to=\"#!\">Chat details</Link>\n    {chat !== null ? (\n      <Fragment>\n        <Posts post={chat.posts} />\n      </Fragment>) :\n      (\n        <Fragment>\n          <Link to=\"/create-post\">Create New Post</Link>\n          <div className=\"profile bg-light\">\n            <div>\n              <h2>\n                Posts:\n              </h2>\n              <p>There are no posts</p>\n            </div>\n          </div>\n        </Fragment>\n      )}\n  </Fragment>\n};\n  \nChat.propTypes = {\n  getCurrentChat: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  chat: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  chat: state.chat\n});\n\nexport default connect(mapStateToProps, { getCurrentChat })(Chat);\n    \n    \n    /*\nimport React, {Fragment} from 'react';\nimport {Link} from 'react-router-dom';\n    import PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n    \nconst Chat = ({chat}) => {\n  const posts = chat.posts.map(post => {\n      <Fragment>\n        <div key={post._id} class=\"posts\">\n          <div class=\"profile bg-light\">\n            <div>\n              <h2><Link to=\"/post\">{post.title}</Link></h2>\n            </div>\n            <div>\n              {post.text}\n            </div>\n          </div>\n        </div>\n      </Fragment>\n\n    });\n    return (\n    <Fragment>\n      <h1 className=\"large text-primary\">\n        {chat.title}\n      </h1>\n      <Link to=\"/chat-details\">Chat Details</Link>\n      <p className=\"lead\">\n        Posts\n      </p>\n      <Link to=\"/create-post\">Create new post</Link>\n      {posts}\n    </Fragment>\n    )\n  }\n  \nChat.propTypes = {\n      chat: PropTypes.array.isRequired\n  };\n  \n  export default Chat;\n*/"]},"metadata":{},"sourceType":"module"}