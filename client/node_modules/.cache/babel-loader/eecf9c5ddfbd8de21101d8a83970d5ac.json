{"ast":null,"code":"var _jsxFileName = \"/Users/jackgoler/Downloads/quadstr/client/src/components/profile/Profile.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentProfile } from '../../actions/profile';\n\nconst Profile = ({\n  getCurrentProfile,\n  auth: {\n    user\n  },\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n  return loading && profile === null ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 40\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 64\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, \"Profile\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, \"Welcome \", user && user.name, \"!\"), profile !== null ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 26\n    }\n  }, \"has\") : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"createChat.html\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, \"Create New Chat\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"profiles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"profile bg-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, \"Your chats:\"))))));\n};\n\nProfile.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Profile);","map":{"version":3,"sources":["/Users/jackgoler/Downloads/quadstr/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","Link","PropTypes","connect","getCurrentProfile","Profile","auth","user","profile","loading","name","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;;AAEA,MAAMC,OAAO,GAAG,CAAC;AACfD,EAAAA,iBADe;AAEfE,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF,GAFS;AAGfC,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAHM,CAAD,KAGsB;AACpCT,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,EAFM,CAAT;AAGA,SAAOK,OAAO,IAAID,OAAO,KAAK,IAAvB,gBAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA9B,gBAAsD,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAC3D;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAD2D,eAI3D;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA6BD,IAAI,IAAIA,IAAI,CAACG,IAA1C,MAJ2D,EAK1DF,OAAO,KAAK,IAAZ,gBAAoB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAApB,gBAEG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,IAAI,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AAAK,IAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAC,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,CADF,CAFF,CAPuD,CAA7D;AAoBD,CA3BD;;AA6BAH,OAAO,CAACM,SAAR,GAAoB;AAClBP,EAAAA,iBAAiB,EAAEF,SAAS,CAACU,IAAV,CAAeC,UADhB;AAElBP,EAAAA,IAAI,EAAEJ,SAAS,CAACY,MAAV,CAAiBD,UAFL;AAGlBL,EAAAA,OAAO,EAAEN,SAAS,CAACY,MAAV,CAAiBD;AAHR,CAApB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCV,EAAAA,IAAI,EAAEU,KAAK,CAACV,IADoB;AAEhCE,EAAAA,OAAO,EAAEQ,KAAK,CAACR;AAFiB,CAAL,CAA7B;;AAKA,eAAeL,OAAO,CAACY,eAAD,EAAkB;AAAEX,EAAAA;AAAF,CAAlB,CAAP,CAAgDC,OAAhD,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentProfile } from '../../actions/profile';\n\nconst Profile = ({\n  getCurrentProfile,\n  auth: { user },\n  profile: { profile, loading } }) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n  return loading && profile === null ? <div>Loading...</div> : <Fragment>\n    <h1 className=\"large text-primary\">\n      Profile\n    </h1>\n    <p className=\"lead\">Welcome {user && user.name}!</p>\n    {profile !== null ? (<Fragment>has</Fragment>) :\n      (\n        <Fragment>\n          <a href=\"createChat.html\">Create New Chat</a>\n          <div class=\"profiles\">\n            <div class=\"profile bg-light\">\n              <div>\n                <h2>Your chats:</h2>\n              </div>\n\n            </div>\n          </div>\n        </Fragment>\n      )}\n  </Fragment>\n};\n\nProfile.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile })(Profile);"]},"metadata":{},"sourceType":"module"}